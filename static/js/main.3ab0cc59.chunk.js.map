{"version":3,"sources":["App.js","serviceWorker.js","components/Navbar/Navbar.js","components/Portfolio/Portfolio.js","index.js"],"names":["App","window","scrollTo","className","id","src","process","href","Component","Boolean","location","hostname","match","Navbar","props","smooth","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Portfolio","Project","map","projects","deployLink1","width","imageLocation1","alt","project1","githubLink1","deployLink2","imageLocation2","project2","githubLink2","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ab0cc59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    window.scrollTo(0,0);\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <a id=\"home\"></a>\n        <div className=\"homeScreen\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 imgRow\">\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"nameText\" >\n                  Full Stack Web Developer\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"introText\">\n                  HTML | CSS | JavaScript | NodeJS | Express | MySQL | MongoDB | ReactJS\n                </div>\n              </div>\n            </div>\n            <div className=\"emptyRow\">\n            </div>\n          </div>\n        </div>\n        <div className=\"aboutSection\">\n          <div className=\"container\" id=\"aboutMe\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"row\">\n                  <div className=\"aboutMeTitle\">\n                    About Me\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"aboutMeInfo\">\n                    <p>I am a Full Stack Web Developer with strong skills in HTML, CSS, Javascript, NodeJS, Express, MongoDB, and React. Iâ€™m passionate about learning new things and find great satisfaction in solving complex problems. </p>\n                    <p>My previous career as a Software Test Engineer allowed me to understand the hard work it takes to put out quality software and the importance of identifying bugs in the early stages of software development. Applying this unique perspective and diverse skills to Web Development has helped me improve the quality of my applications and save time in the debugging phase of development.</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-6 circular\">\n                <img src={process.env.PUBLIC_URL + \"/img/saron.jpg\"} />\n              </div>\n            </div>\n\n            <div className=\"container\">\n              <div className=\"row\" id=\"contact\">\n                <div className=\"col-md-6\">\n                  <div className=\"contactMeTitle\">Contact Me </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"contactMeInfo\">\n                  <h6>Email: saronnhong@gmail.com</h6>\n                  <h6>Phone: (209) 598-4517</h6>\n                  <a className=\"contactLinks\" href=\"www.linkedin.com/in/saronnhong\"><h6>LinkedIn</h6></a>\n                  <a className=\"contactLinks\" href=\"https://github.com/saronnhong\"><h6>Github</h6></a>\n                </div>\n                \n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n// import { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link';\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <div className=\"navTop\">\n            <nav className=\"navbar navbar-dark bg-dark fixed-top navbar-expand-sm\" id=\"nav1\">\n                <Link smooth to=\"/#home\">\n                    <div className=\"navbar-brand\" ><i className=\"far fa-address-card\"></i> Saron Nhong</div>\n                </Link>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul class=\"navbar-nav\">\n                        <li class=\"nav-item\">\n                            <Link smooth to=\"/#aboutMe\">\n                                <div className=\"navMenu\" id=\"navAbout\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">About</div>\n                            </Link>\n                        </li>\n                        <li class=\"nav-item\">\n                            <Link smooth to=\"/portfolio\">\n                                <div className=\"navMenu\" href=\"#portSec\" id=\"navPort\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">Portfolio</div>\n                            </Link>\n                        </li>\n                        <li class=\"nav-item\">\n                            <Link smooth to=\"/#contact\">\n                                <div className=\"navMenu\" id=\"navContact\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">Contact</div>\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n\n\n\n    );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n// import { BrowserRouter, Route, Link } from \"react-router-dom\";\n// import { HashLink as Link } from 'react-router-hash-link';\nimport Project from \"./projectList.json\";\nimport \"./style.css\";\n\n\n\nclass Portfolio extends Component  {\n    componentDidMount() {\n        window.scrollTo(0,0);\n      }\n    render(){\n    return (\n        <div className=\"portMain\">\n            <div className=\"container portContainer\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 id=\"portfolioTitle\">My Portfolio</h1>\n                    </div>\n                </div>\n\n                {Project.map((projects) =>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 cardRow\">\n                            <div className=\"card cardPort\">\n                                <a href={projects.deployLink1}>\n                                    <img width=\"100%\" src={process.env.PUBLIC_URL + projects.imageLocation1} className=\"card-img-top\" alt=\"...\" />\n                                </a>\n                                <div className=\"card-body\">\n                                    <div className=\"card-text\">{projects.project1}\n                                        <a href={projects.githubLink1}>\n                                            <i className=\"fab fa-github githubFA\"></i>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6 cardRow\">\n                            <div className=\"card cardPort\">\n                                \n                                <a href={projects.deployLink2}>\n                                    <img width=\"100%\" src={process.env.PUBLIC_URL + projects.imageLocation2} className=\"card-img-top\" alt=\"...\" />\n                                </a>\n                                <div className=\"card-body\">\n                                    <div className=\"card-text\">{projects.project2}\n                                    \n                                        <a href={projects.githubLink2}>\n                                        <i className=\"fab fa-github githubFA\"></i>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div >\n    );\n}\n}\nexport default Portfolio;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Navbar from './components/Navbar';\nimport Portfolio from './components/Portfolio';\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route exact path=\"/saronnhong-portfolio\" component={App} />\n                <Route exact path=\"/portfolio\" component={Portfolio} />\n                <Route component={App} />\n            </Switch>\n\n\n        </div>\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}